In this course we'll learn about natural language processing (NLP) using libraries from the Hugging Face ecosystem ‚Äî ü§ó Transformers, ü§ó Datasets, ü§ó Tokenizers, and ü§ó Accelerate ‚Äî as well as the Hugging Face Hub. 

What is NLP?

NLP is a field of linguistics and machine learning focused on understanding everything related to human language. The aim of NLP tasks is not only to understand single words individually, but to be able to understand the context of those words.

The following is a list of common NLP tasks, with some examples of each:

Classifying whole sentences: Getting the sentiment of a review, detecting if an email is spam, determining if a sentence is grammatically correct or whether two sentences
are logically related or not
Classifying each word in a sentence: Identifying the grammatical components of a sentence (noun, verb, adjective), or the named entities (person, location, organization)
Generating text content: Completing a prompt with auto-generated text, filling in the blanks in a text with masked words
Extracting an answer from a text: Given a question and a context, extracting the answer to the question based on the information provided in the context
Generating a new sentence from an input text: Translating a text into another language, summarizing a text
NLP isn‚Äôt limited to written text though. It also tackles complex challenges in speech recognition and computer vision, such as generating a transcript of an audio sample
or a description of an image.

Why is it challenging?
Computers don‚Äôt process information in the same way as humans. For example, when we read the sentence ‚ÄúI am hungry,‚Äù we can easily understand its meaning. 
Similarly, given two sentences such as ‚ÄúI am hungry‚Äù and ‚ÄúI am sad,‚Äù we‚Äôre able to easily determine how similar they are. For machine learning (ML) models, 
such tasks are more difficult. The text needs to be processed in a way that enables the model to learn from it. And because language is complex, we need to 
think carefully about how this processing must be done. There has been a lot of research done on how to represent text, and we will look at some methods in 
the next chapter.

Transformers, what can they do?
- Transformer models are used to solve all kinds of NLP tasks
-The most basic object in the ü§ó Transformers library is the pipeline() function. It connects a model with its necessary preprocessing and postprocessing steps, 
allowing us to directly input any text and get an intelligible answer.

How do Transformers work?

Transformer models can be grouped as - 
GPT-like (also called auto-regressive Transformer models)
BERT-like (also called auto-encoding Transformer models)
BART/T5-like (also called sequence-to-sequence Transformer models)


How do transformers work ?
Transformers are language models
All the Transformer models mentioned above (GPT, BERT, BART, T5, etc.) have been trained as language models. This means they have been trained on large amounts of raw 
text in a self-supervised fashion. Self-supervised learning is a type of training in which the objective is automatically computed from the inputs of the model. That 
means that humans are not needed to label the data!

This type of model develops a statistical understanding of the language it has been trained on, but it‚Äôs not very useful for specific practical tasks. Because of this,
the general pretrained model then goes through a process called transfer learning. During this process, the model is fine-tuned in a supervised way ‚Äî that is, using 
human-annotated labels ‚Äî on a given task.

An example of a task is predicting the next word in a sentence having read the n previous words. This is called causal language modeling because the output depends on 
the past and present inputs, but not the future ones.
Another example is masked language modeling, in which the model predicts a masked word in the sentence.

Transformers are big models
Apart from a few outliers (like DistilBERT), the general strategy to achieve better performance is by increasing the models‚Äô sizes as well as the amount of data 
they are pretrained on.

Transfer Learning:
Pretraining is the act of training a model from scratch: the weights are randomly initialized, and the training starts without any prior knowledge.

This pretraining is usually done on very large amounts of data. Therefore, it requires a very large corpus of data, and training can take up to several weeks.

Fine-tuning, on the other hand, is the training done after a model has been pretrained. To perform fine-tuning, you first acquire a pretrained language model, 
then perform additional training with a dataset specific to your task.

For example, one could leverage a pretrained model trained on the English language and then fine-tune it on an arXiv corpus, resulting in a science/research-based model. 
The fine-tuning will only require a limited amount of data: the knowledge the pretrained model has acquired is ‚Äútransferred,‚Äù hence the term transfer learning.




